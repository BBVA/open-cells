name: Publish to NPM
on:
  release:
    types: [created]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies and build
        run: |
          npm i --package-lock-only
          npm ci 
          npm run build --if-present
      - name: Publish core package on NPM.js
        working-directory: ./packages/core
        run: |
          if npm info @open-cells/core@$(jq -r .version < package.json) > /dev/null 2>&1; then
            echo "Version already published"
          else
            npm publish || echo "Publish failed"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Publish core-plugin package on NPM.js
        working-directory: ./packages/core-plugin
        run: |
          if npm info @open-cells/core-plugin@$(jq -r .version < package.json) > /dev/null 2>&1; then
            echo "Version already published"
          else
            npm publish || echo "Publish failed"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Publish element-controller package on NPM.js
        working-directory: ./packages/element-controller
        run: |
          if npm info @open-cells/element-controller@$(jq -r .version < package.json) > /dev/null 2>&1; then
            echo "Version already published"
          else
            npm publish || echo "Publish failed"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Publish page-controller package on NPM.js
        working-directory: ./packages/page-controller
        run: |
          if npm info @open-cells/page-controller@$(jq -r .version < package.json) > /dev/null 2>&1; then
            echo "Version already published"
          else
            npm publish || echo "Publish failed"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Publish page-mixin package on NPM.js
        working-directory: ./packages/page-mixin
        run: |
          if npm info @open-cells/page-mixin@$(jq -r .version < package.json) > /dev/null 2>&1; then
            echo "Version already published"
          else
            npm publish || echo "Publish failed"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Publish page-transitions package on NPM.js
        working-directory: ./packages/page-transitions
        run: |
          if npm info @open-cells/page-transitions@$(jq -r .version < package.json) > /dev/null 2>&1; then
            echo "Version already published"
          else
            npm publish || echo "Publish failed"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Publish localize package on NPM.js
        working-directory: ./packages/localize
        run: |
          if npm info @open-cells/localize@$(jq -r .version < package.json) > /dev/null 2>&1; then
            echo "Version already published"
          else
            npm publish || echo "Publish failed"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Publish create-app package on NPM.js
        working-directory: ./packages/create-app
        run: |
          if npm info @open-cells/create-app@$(jq -r .version < package.json) > /dev/null 2>&1; then
            echo "Version already published"
          else
            npm publish || echo "Publish failed"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}